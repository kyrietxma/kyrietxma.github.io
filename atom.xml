<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kyrie.德鲁大叔</title>
  
  <subtitle>千里之行始于足下，世间最难能可贵的就是坚持！！！！</subtitle>
  <link href="/kyrietxma.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/kyrietxma/kyrietxma.github.io/"/>
  <updated>2019-03-13T22:05:02.853Z</updated>
  <id>https://github.com/kyrietxma/kyrietxma.github.io/</id>
  
  <author>
    <name>Kyriematx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML文件怎么引入高德地图</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/03/14/HTML%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E5%BC%95%E5%85%A5%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/03/14/HTML文件怎么引入高德地图/</id>
    <published>2019-03-13T22:02:49.295Z</published>
    <updated>2019-03-13T22:05:02.853Z</updated>
    
    <content type="html"><![CDATA[<p>1.首先，注册高德地图开发者，这个直接在官网上注册，输入必要信息就行，如下：<br><img src="https://img-blog.csdnimg.cn/20190314055509733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.注册完成后，进入个人中心，依次点击“应用管理”-&gt;“我的应用”-&gt;“创建新应用”，如下，这里输入应用名称，选择类型就行：</p><p><img src="https://img-blog.csdnimg.cn/2019031405571790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3 接着就需要为应用添加key值，点击右上角的+号，就会弹出添加窗口，这里我们选择“Web端（JS API）”，如下：<br><img src="https://img-blog.csdnimg.cn/2019031405574890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4 添加key值成功后，就会在应用列表中看到刚才添加的key值，如下，后面的代码中需要用到这个key值：<br><img src="https://img-blog.csdnimg.cn/20190314055818185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.最后就是编写代码，在html页面中引入3D地图了，如下，代码很简单，主要是创建div容器，然后通过JS引入地图到这个容器中，这里需要JS API版本在1.4.0以上，指定地图模式为3D，key值替换成自己应用的key值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no, width=device-width&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot; /&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        html,</span><br><span class="line">        body,</span><br><span class="line">        #container &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;title&gt;地图加载完成&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;https://webapi.amap.com/maps?v=1.4.13&amp;key=你的key值&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://a.amap.com/jsapi_demos/static/demo-center/js/demoutils.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var map = map = new AMap.Map(&apos;container&apos;, &#123;</span><br><span class="line">        resizeEnable: true,</span><br><span class="line">        viewMode:&apos;3D&apos;</span><br><span class="line">    &#125;);</span><br><span class="line">    map.on(&quot;complete&quot;, function()&#123;</span><br><span class="line">        log.success(&quot;地图加载完成！&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>6 浏览效果如图：<br><img src="https://img-blog.csdnimg.cn/20190314060242123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.首先，注册高德地图开发者，这个直接在官网上注册，输入必要信息就行，如下：&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190314055509733.png?x-oss-process=image/watermark,type_
      
    
    </summary>
    
    
      <category term="JS 高德地图" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/JS-%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何利用IDEA上传项目到Github</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/03/14/IDEA%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE%E5%88%B0Github/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/03/14/IDEA上传项目到Github/</id>
    <published>2019-03-13T19:23:31.102Z</published>
    <updated>2019-03-13T19:32:42.556Z</updated>
    
    <content type="html"><![CDATA[<p>第一种情况：<br> 新的项目第一次推送到Github步骤：<br>① 选择 share  project on  Github<img src="https://img-blog.csdnimg.cn/20190314022049639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="点击VSC，选择import into     Version Conttol,选择on Github"><br>② 添加仓库名，添加描述<img src="https://img-blog.csdnimg.cn/20190314022450833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="创建一个仓库，并为这个项目添加必要的描述"><br>③ 选择你要放到GitHub上的文件（大部分是选择你修改过的文件，但是本次我是第一次发布项目，所以全选）<br><img src="https://img-blog.csdnimg.cn/20190314022831921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="选择你要上传的文件，添加描述（一般说明被选择文件作了什么修改）点击add按钮"><br>④ 显示上传成功<br><img src="https://img-blog.csdnimg.cn/201903140232352.png" alt="蓝色字体是第二步创建的仓库名"><br>⑤ 登录个人GitHub账号，查看项目<br><img src="https://img-blog.csdnimg.cn/20190314023515177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="此时个人GitHub中已经存在当前项目，上传成功"></p><p>第二种情况：GitHub中已经有了项目，在IDEA中修改了项目中的代码，更新GitHub中的代码</p><p>① 修改代码：<br>    对于修改了的代码，IDEA会自动显示为不同颜色，比如新建的文件，文件名显示红色；修改了已有文件中的代码，被修改部分显示绿色<br><img src="https://img-blog.csdnimg.cn/20190314024857450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="红色表示新建的文件，绿色表示在已有文件中做修改的部分"><br>② 修改完代码后，重新上传代码：<br>    在项目上传的过程中，我们遵从<strong>添加到本地仓库–&gt;提交和推到远程仓库</strong>的步骤<br>    A 添加到本地仓库：<br>       右键项目名，选择Git,点击Add:添加项目到本地仓库，具体步骤如下图：<br>   <img src="https://img-blog.csdnimg.cn/20190314025449266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="添加项目到本地仓库"><br>   成功添加到本地仓库：<img src="https://img-blog.csdnimg.cn/20190314025642260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt=""><br>   B  提交并推送代码到远程仓库：<br>   右键项目名，选择Git，点击Commit directory<br>   具体操作如下：<br>   <img src="https://img-blog.csdnimg.cn/20190314030138633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>      <img src="https://img-blog.csdnimg.cn/201903140311298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="如图，提交代码的时候怎么选择文件，具体需要哪些操作的说明"><br>      <img src="https://img-blog.csdnimg.cn/20190314031618776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="点击push提交代码"><br><img src="https://img-blog.csdnimg.cn/20190314031744361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>③ 在个人GitHub中查看项目的更新情况<br><img src="https://img-blog.csdnimg.cn/20190314031953649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>代码更新成功！！<br>至此，关于使用IDEA上传代码的操作已经完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一种情况：&lt;br&gt; 新的项目第一次推送到Github步骤：&lt;br&gt;① 选择 share  project on  Github&lt;img src=&quot;https://img-blog.csdnimg.cn/20190314022049639.png?x-oss-process
      
    
    </summary>
    
    
      <category term="GitHub  IDEA" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/GitHub-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>批量查询全过程</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/03/13/%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B%EF%BC%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/03/13/批量查询的全过程（学习笔记）/</id>
    <published>2019-03-13T09:46:36.142Z</published>
    <updated>2019-01-16T08:48:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>具体步骤如下：<br>1  controller层（查询开始的接口）<br> ① 调用UserService查询用户列表<br> ② 调用RoleService查询当前用户所拥有的角色list<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(&quot;listUser&quot;)</span><br><span class="line">public String list(Model model) &#123;</span><br><span class="line">//查询用户</span><br><span class="line">List&lt;User&gt; user = userService.list();</span><br><span class="line">model.addAttribute(&quot;user&quot;, user);</span><br><span class="line">//用户角色对应map</span><br><span class="line">Map&lt;User, List&lt;Role&gt;&gt; user_roles = new HashMap&lt;&gt;();</span><br><span class="line">for (User user : user) &#123;</span><br><span class="line">//获得当前用户所拥有的角色list</span><br><span class="line">List&lt;Role&gt; roles = roleService.listRoles(user);</span><br><span class="line">user_roles.put(user, roles);</span><br><span class="line">&#125;</span><br><span class="line">model.addAttribute(&quot;user_roles&quot;, user_roles);</span><br><span class="line">return &quot;listUser&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2 调用UserService查询用户，返回一个用户list，具体实现在它的实现层中，代码如下：<br>① 调用UserMapper层从数据库进行查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public List&lt;User&gt; list() &#123;</span><br><span class="line">//相当于用户的一个工具类，设置查询结果list的排序规则</span><br><span class="line">UserExample example = new UserExample();</span><br><span class="line">//当前查询到的用户按降序排序</span><br><span class="line">example.setOrderByClause(&quot;id desc&quot;);</span><br><span class="line">return userMapper.selectByExample(example);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3 UserMapper层的方法如下：返回一个用户list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; selectByExample(UserExample example);</span><br></pre></td></tr></table></figure><p>4 UserMapper.xml具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;selectByExample&quot; parameterType=&quot;com.how2java.pojo.UserExample&quot; resultMap=&quot;BaseResultMap&quot;&gt;</span><br><span class="line">    select</span><br><span class="line">    &lt;if test=&quot;distinct&quot;&gt;</span><br><span class="line">      distinct</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &apos;false&apos; as QUERYID,</span><br><span class="line">    &lt;include refid=&quot;Base_Column_List&quot; /&gt;</span><br><span class="line">    from user</span><br><span class="line">    &lt;if test=&quot;_parameter != null&quot;&gt;</span><br><span class="line">      &lt;include refid=&quot;Example_Where_Clause&quot; /&gt;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    &lt;if test=&quot;orderByClause != null&quot;&gt;</span><br><span class="line">      order by $&#123;orderByClause&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">  &lt;/select&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;具体步骤如下：&lt;br&gt;1  controller层（查询开始的接口）&lt;br&gt; ① 调用UserService查询用户列表&lt;br&gt; ② 调用RoleService查询当前用户所拥有的角色list&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="批量查询" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/03/13/hello-world/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/03/13/hello-world/</id>
    <published>2019-03-13T09:46:36.129Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>shiro学习记录</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/01/16/shiro%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/01/16/shiro学习记录（二）/</id>
    <published>2019-01-16T08:45:28.000Z</published>
    <updated>2019-01-16T08:47:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>1 登录的用户对象，封装成一个token对象<br>2 根据SecurityUtils获得一个subject对象，再调用subject的login(token)方法进行登录，如果正常登陆（执行subject.login(token)成功，就能在全局通过SecurityUtils.getSubject().getPrincipal()获取用户信息。<br>3 MD5加密：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String password=&quot;123&quot;;</span><br><span class="line">String MD5password = new Md5Hash(password).toString();</span><br></pre></td></tr></table></figure><p>4 对原有密码添加盐值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//加盐值（随机数）</span><br><span class="line">String salt = new SecureRandomNumberGenerator().nextBytes().toString();</span><br><span class="line">//加盐值后的密码</span><br><span class="line">newPassword = new SimpleHash(algorithmName, password, salt).toString();</span><br></pre></td></tr></table></figure><p>SSM集成shiro</p><p>1  web.xml做以下几件事件事：<br>① 指定spring的配置文件有两个，分别是用于链接数据库的applicationContext.xml和用于配置shiro的applicationContext-shiro.xml<br>② 指定springmvc的配置文件：springMVC.xml<br>③ 使用shiro过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter-class&gt;org.springframework.web.filter.Delegating&lt;/filter-class&gt;</span><br></pre></td></tr></table></figure><p>具体代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:web=&quot;http://java.sun.com/xml/ns/javaee&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot; version=&quot;2.5&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;!-- spring的配置文件--&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;</span><br><span class="line">            classpath:applicationContext.xml,</span><br><span class="line">            classpath:applicationContext-shiro.xml</span><br><span class="line">        &lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;!-- spring mvc核心：分发servlet --&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;mvc-dispatcher&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">        &lt;!-- spring mvc的配置文件 --&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:springMVC.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;mvc-dispatcher&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;!-- Shiro配置 --&gt;</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line">     </span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><p>2  applicationContext.xml 配置数据库和mybatis的扫描mapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;context:annotation-config /&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.how2java.service&quot; /&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;bean id=&quot;dataSource&quot; class=&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&gt; </span><br><span class="line">      &lt;property name=&quot;driverClassName&quot;&gt; </span><br><span class="line">          &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt; </span><br><span class="line">      &lt;/property&gt; </span><br><span class="line">      &lt;property name=&quot;url&quot;&gt; </span><br><span class="line">          &lt;value&gt;jdbc:mysql://localhost:3306/shiro?characterEncoding=UTF-8&lt;/value&gt; </span><br><span class="line">     </span><br><span class="line">      &lt;/property&gt; </span><br><span class="line">      &lt;property name=&quot;username&quot;&gt; </span><br><span class="line">          &lt;value&gt;root&lt;/value&gt; </span><br><span class="line">      &lt;/property&gt; </span><br><span class="line">      &lt;property name=&quot;password&quot;&gt; </span><br><span class="line">          &lt;value&gt;admin&lt;/value&gt; </span><br><span class="line">      &lt;/property&gt;    </span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;bean id=&quot;sqlSession&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.how2java.pojo&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:com/how2java/mapper/*.xml&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;basePackage&quot; value=&quot;com.how2java.mapper&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>3  applicationContext-shiro.xml 提供shiro的相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 --&gt;</span><br><span class="line">    &lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!-- 调用我们配置的权限管理器 --&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot; /&gt;</span><br><span class="line">        &lt;!-- 配置我们的登录请求地址 --&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login&quot; /&gt;</span><br><span class="line">        &lt;!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 --&gt;</span><br><span class="line">        &lt;property name=&quot;unauthorizedUrl&quot; value=&quot;/unauthorized&quot; /&gt;</span><br><span class="line">        &lt;!-- 退出 --&gt;</span><br><span class="line">        &lt;property name=&quot;filters&quot;&gt;</span><br><span class="line">            &lt;util:map&gt;</span><br><span class="line">                &lt;entry key=&quot;logout&quot; value-ref=&quot;logoutFilter&quot; /&gt;</span><br><span class="line">            &lt;/util:map&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- 权限配置 --&gt;</span><br><span class="line">        &lt;property name=&quot;filterChainDefinitions&quot;&gt;</span><br><span class="line">            &lt;value&gt;</span><br><span class="line">                &lt;!-- anon表示此地址不需要任何权限即可访问 --&gt;</span><br><span class="line">                /login=anon</span><br><span class="line">                /index=anon</span><br><span class="line">                /static/**=anon</span><br><span class="line">                /doLogout=logout</span><br><span class="line">                &lt;!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login --&gt;</span><br><span class="line">                /** = authc</span><br><span class="line">            &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!-- 退出过滤器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;logoutFilter&quot; class=&quot;org.apache.shiro.web.filter.authc.LogoutFilter&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;redirectUrl&quot; value=&quot;/index&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;!-- 会话ID生成器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;sessionIdGenerator&quot;</span><br><span class="line">        class=&quot;org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator&quot; /&gt;</span><br><span class="line">    &lt;!-- 会话Cookie模板 关闭浏览器立即失效 --&gt;</span><br><span class="line">    &lt;bean id=&quot;sessionIdCookie&quot; class=&quot;org.apache.shiro.web.servlet.SimpleCookie&quot;&gt;</span><br><span class="line">        &lt;constructor-arg value=&quot;sid&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;httpOnly&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;maxAge&quot; value=&quot;-1&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!-- 会话DAO --&gt;</span><br><span class="line">    &lt;bean id=&quot;sessionDAO&quot;</span><br><span class="line">        class=&quot;org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;sessionIdGenerator&quot; ref=&quot;sessionIdGenerator&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!-- 会话验证调度器，每30分钟执行一次验证 ，设定会话超时及保存 --&gt;</span><br><span class="line">    &lt;bean name=&quot;sessionValidationScheduler&quot;</span><br><span class="line">        class=&quot;org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;interval&quot; value=&quot;1800000&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionManager&quot; ref=&quot;sessionManager&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!-- 会话管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;sessionManager&quot;</span><br><span class="line">        class=&quot;org.apache.shiro.web.session.mgt.DefaultWebSessionManager&quot;&gt;</span><br><span class="line">        &lt;!-- 全局会话超时时间（单位毫秒），默认30分钟 --&gt;</span><br><span class="line">        &lt;property name=&quot;globalSessionTimeout&quot; value=&quot;1800000&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;deleteInvalidSessions&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionValidationSchedulerEnabled&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionValidationScheduler&quot; ref=&quot;sessionValidationScheduler&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionDAO&quot; ref=&quot;sessionDAO&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionIdCookieEnabled&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionIdCookie&quot; ref=&quot;sessionIdCookie&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;!-- 安全管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;securityManager&quot; class=&quot;org.apache.shiro.web.mgt.DefaultWebSecurityManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;realm&quot; ref=&quot;databaseRealm&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;sessionManager&quot; ref=&quot;sessionManager&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) --&gt;</span><br><span class="line">    &lt;bean</span><br><span class="line">        class=&quot;org.springframework.beans.factory.config.MethodInvokingFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;staticMethod&quot;</span><br><span class="line">            value=&quot;org.apache.shiro.SecurityUtils.setSecurityManager&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;arguments&quot; ref=&quot;securityManager&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;bean id=&quot;databaseRealm&quot; class=&quot;com.how2java.realm.DatabaseRealm&quot;&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;!-- 保证实现了Shiro内部lifecycle函数的bean执行 --&gt;</span><br><span class="line">    &lt;bean id=&quot;lifecycleBeanPostProcessor&quot; class=&quot;org.apache.shiro.spring.LifecycleBeanPostProcessor&quot; /&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>4  springMVC.xml基本配置、增加了对shiro的支持、指定了异常处理类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--启用shiro注解 --&gt;</span><br><span class="line">    &lt;bean</span><br><span class="line">        class=&quot;org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator&quot;</span><br><span class="line">        depends-on=&quot;lifecycleBeanPostProcessor&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;proxyTargetClass&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;bean</span><br><span class="line">        class=&quot;org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>5  log4j.properties 日配置文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line">log4j.logger.com.how2java=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><p>6  登录方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value=&quot;/login&quot;,method=RequestMethod.POST)</span><br><span class="line">    public String login(Model model,String name, String password) &#123;</span><br><span class="line">        Subject subject = SecurityUtils.getSubject(); </span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(name, password); </span><br><span class="line">        try &#123; </span><br><span class="line">            subject.login(token);</span><br><span class="line">            Session session=subject.getSession();</span><br><span class="line">            session.setAttribute(&quot;subject&quot;, subject);</span><br><span class="line">            return &quot;redirect:index&quot;;</span><br><span class="line">             </span><br><span class="line">        &#125; catch (AuthenticationException e) &#123; </span><br><span class="line">            model.addAttribute(&quot;error&quot;, &quot;验证失败&quot;); </span><br><span class="line">            return &quot;login&quot;;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 登录的用户对象，封装成一个token对象&lt;br&gt;2 根据SecurityUtils获得一个subject对象，再调用subject的login(token)方法进行登录，如果正常登陆（执行subject.login(token)成功，就能在全局通过SecurityUti
      
    
    </summary>
    
    
      <category term="个人学习笔记" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>springboot项目使用mybatis逆向工程生成代码</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/01/14/springboot%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8mybatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/01/14/springboot项目使用mybatis逆向工程生成代码/</id>
    <published>2019-01-14T07:56:28.000Z</published>
    <updated>2019-01-16T08:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>第一次写博客，权当是对自己学习的记录！！！</p><pre><code>开发工具         eclipse 数据库mysql</code></pre><p> 1      先简单说一下eclipse中如何使用mybatis的逆向工程来快速生成代码<br>   利用eclipse搭建springboot项目的前提是eclipse安装了Spring插件，具体如下：help–&gt;eclipse marketplace 在也页面中输入Spring搜索后install当前插件并重启eclipse<br> 2  在创建springboot项目的时候，选择<br>   <img src="https://img-blog.csdnimg.cn/20190110163633753.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><pre><code>点击finish完成项目创建</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;parent&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.1.1.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;groupId&gt;com.kyrie&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis-generator&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;name&gt;mybatis-generator&lt;/name&gt;</span><br><span class="line">&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;!-- mybatis-generator  插件 --&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>在项目的pom.xml文件中引入mybatis的generator插件</p><p>3 下面配置两个重要的配置文件，<br>   ①  第一个是springboot项目的全局变量：application.yml<br>  在配置application.yml文件的时候需要注意冒号后面的空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.jdbc.Driver  //mysql数据库驱动</span><br><span class="line">    url: jdbc:mysql://127.0.0.1:3306/newtest   //数据库名</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">server:</span><br><span class="line">  port: 8081</span><br><span class="line">#mybatis的配置</span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper/*.xml</span><br><span class="line">  type-aliases-package: com.kyrie.matx.entity</span><br></pre></td></tr></table></figure><p> ② 第二个重要的配置文件是generator的配置文件generatorConfig.xml<br> 该配置文件中配置代码生成的具体策略，详细信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties resource=&quot;application.yml&quot; /&gt;</span><br><span class="line">    &lt;!-- mysql驱动的位置 这个是MySQL连接的jar包，你需要指定你自己计算机上的jar包的位置--&gt;</span><br><span class="line">    &lt;classPathEntry location=&quot;C:/Users/tengxiao.ma/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar&quot; /&gt;</span><br><span class="line">    &lt;context id=&quot;Tables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;!-- 是否生成注释代时间戳 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- JDBC连接 其中connectionURL后面的newtest改为你创建的数据库，紧跟在后面是数据库连接的账户和密码--&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">                connectionURL=&quot;jdbc:mysql://localhost:3306/newtest&quot;</span><br><span class="line">                userId=&quot;root&quot;</span><br><span class="line">                password=&quot;root&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span><br><span class="line">        &lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和</span><br><span class="line">         NUMERIC 类型解析为java.math.BigDecimal --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） --&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成实体类地址 这里需要你改动，其中targetPackage需要根据你自己创建的目录进行改动 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.kyrie.matx.entity&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">            &lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成mapper xml文件 这里不需要改动 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mapper&quot;  targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">            &lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成mapper xml对应Client   这里需要改动targetPackage，依据你自己的工程--&gt;</span><br><span class="line">        &lt;javaClientGenerator targetPackage=&quot;com.kyrie.matx.dao&quot; targetProject=&quot;src/main/java&quot; type=&quot;XMLMAPPER&quot;&gt;</span><br><span class="line">            &lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置表信息 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample</span><br><span class="line">            是否生成 example类   个人觉得生成那么多的example类很繁琐，因此设置为false--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;table schema=&quot;newtest&quot; tableName=&quot;category&quot;</span><br><span class="line">               domainObjectName=&quot;Category&quot; enableCountByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               enableUpdateByExample=&quot;false&quot;&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;table schema=&quot;newtest&quot; tableName=&quot;product&quot;</span><br><span class="line">               domainObjectName=&quot;Product&quot; enableCountByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               enableUpdateByExample=&quot;false&quot;&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>4 运行generator，完成代码的自动生成<br> 右击项目名：Run as–&gt;maven build,在Goals:mybatis-generator：generate 如下<br> <img src="https://img-blog.csdnimg.cn/20190110170406486.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>apply–&gt;run</p><p>5 <img src="https://img-blog.csdnimg.cn/20190110170923647.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>运行结果如下表示代码生成成功，但是在当前的页面是看不到的，需要删除项目（不要删除工作空间的项目），之后import这个maven项目<br>6 完成这一系列工作之后，项目的具体结构如下：<br><img src="https://img-blog.csdnimg.cn/20190110171401118.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQzNTg0MDE2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一次写博客，权当是对自己学习的记录！！！&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;开发工具
         eclipse
 数据库mysql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 1      先简单说一下eclipse中如何使用mybatis的逆向工程来快速生成代码&lt;br&gt;   
      
    
    </summary>
    
    
      <category term="个人笔记" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>个人github练习</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/01/09/%E4%B8%AA%E4%BA%BAgithub%E7%BB%83%E4%B9%A0/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/01/09/个人github练习/</id>
    <published>2019-01-09T08:14:00.000Z</published>
    <updated>2019-01-09T08:15:14.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="是不是跟github链接" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/%E6%98%AF%E4%B8%8D%E6%98%AF%E8%B7%9Fgithub%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>你好，2019</title>
    <link href="https://github.com/kyrietxma/kyrietxma.github.io/2019/01/09/%E4%BD%A0%E5%A5%BD%EF%BC%8C2019/"/>
    <id>https://github.com/kyrietxma/kyrietxma.github.io/2019/01/09/你好，2019/</id>
    <published>2019-01-09T07:56:28.000Z</published>
    <updated>2019-01-09T07:57:20.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="你好，2019 新的一年，要有新的成长" scheme="https://github.com/kyrietxma/kyrietxma.github.io/tags/%E4%BD%A0%E5%A5%BD%EF%BC%8C2019-%E6%96%B0%E7%9A%84%E4%B8%80%E5%B9%B4%EF%BC%8C%E8%A6%81%E6%9C%89%E6%96%B0%E7%9A%84%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
</feed>
